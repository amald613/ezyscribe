<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="30" passed="26" failed="4" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-07-24T14:40:28 IST" name="EzyScribe Login Suite" finished-at="2025-07-24T14:43:27 IST" duration-ms="179274">
    <groups>
    </groups>
    <test started-at="2025-07-24T14:40:28 IST" name="LoginTests" finished-at="2025-07-24T14:43:27 IST" duration-ms="179274">
      <class name="tests.LoginTests">
        <test-method is-config="true" signature="setupClass()[pri:0, instance:tests.LoginTests@793138bd]" started-at="2025-07-24T14:40:28 IST" name="setupClass" finished-at="2025-07-24T14:40:29 IST" duration-ms="939" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupClass -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.LoginTests@793138bd]" started-at="2025-07-24T14:40:29 IST" name="setup" finished-at="2025-07-24T14:40:33 IST" duration-ms="3492" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:tests.LoginTests@793138bd]" started-at="2025-07-24T14:40:33 IST" name="loginTest" description="TC01-TC24 - Login test for various valid/invalid credentials" data-provider="loginData" finished-at="2025-07-24T14:40:35 IST" duration-ms="2102" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC01]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[testprovider@gmail.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12345678]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[success_doctor]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTests@793138bd]" started-at="2025-07-24T14:40:35 IST" name="tearDown" finished-at="2025-07-24T14:40:35 IST" duration-ms="128" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.LoginTests@793138bd]" started-at="2025-07-24T14:40:35 IST" name="setup" finished-at="2025-07-24T14:40:38 IST" duration-ms="3498" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:tests.LoginTests@793138bd]" started-at="2025-07-24T14:40:38 IST" name="loginTest" description="TC01-TC24 - Login test for various valid/invalid credentials" data-provider="loginData" finished-at="2025-07-24T14:40:40 IST" duration-ms="1272" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC02]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[wrongemail@example.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[DocPass123]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[error]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTests@793138bd]" started-at="2025-07-24T14:40:40 IST" name="tearDown" finished-at="2025-07-24T14:40:40 IST" duration-ms="131" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.LoginTests@793138bd]" started-at="2025-07-24T14:40:40 IST" name="setup" finished-at="2025-07-24T14:40:43 IST" duration-ms="3247" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:tests.LoginTests@793138bd]" started-at="2025-07-24T14:40:43 IST" name="loginTest" description="TC01-TC24 - Login test for various valid/invalid credentials" data-provider="loginData" finished-at="2025-07-24T14:40:44 IST" duration-ms="1268" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC03]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[doctor@example.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[wrongpass]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[error]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTests@793138bd]" started-at="2025-07-24T14:40:44 IST" name="tearDown" finished-at="2025-07-24T14:40:45 IST" duration-ms="136" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.LoginTests@793138bd]" started-at="2025-07-24T14:40:45 IST" name="setup" finished-at="2025-07-24T14:40:48 IST" duration-ms="3216" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:tests.LoginTests@793138bd]" started-at="2025-07-24T14:40:48 IST" name="loginTest" description="TC01-TC24 - Login test for various valid/invalid credentials" data-provider="loginData" finished-at="2025-07-24T14:40:49 IST" duration-ms="1221" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC04]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[DocPass123]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[error]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTests@793138bd]" started-at="2025-07-24T14:40:49 IST" name="tearDown" finished-at="2025-07-24T14:40:49 IST" duration-ms="134" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.LoginTests@793138bd]" started-at="2025-07-24T14:40:49 IST" name="setup" finished-at="2025-07-24T14:40:52 IST" duration-ms="3276" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:tests.LoginTests@793138bd]" started-at="2025-07-24T14:40:52 IST" name="loginTest" description="TC01-TC24 - Login test for various valid/invalid credentials" data-provider="loginData" finished-at="2025-07-24T14:40:54 IST" duration-ms="1240" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC05]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[doctor@example.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[error]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTests@793138bd]" started-at="2025-07-24T14:40:54 IST" name="tearDown" finished-at="2025-07-24T14:40:54 IST" duration-ms="122" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.LoginTests@793138bd]" started-at="2025-07-24T14:40:54 IST" name="setup" finished-at="2025-07-24T14:40:57 IST" duration-ms="3256" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:tests.LoginTests@793138bd]" started-at="2025-07-24T14:40:57 IST" name="loginTest" description="TC01-TC24 - Login test for various valid/invalid credentials" data-provider="loginData" finished-at="2025-07-24T14:40:58 IST" duration-ms="1228" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC06]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[error]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTests@793138bd]" started-at="2025-07-24T14:40:58 IST" name="tearDown" finished-at="2025-07-24T14:40:58 IST" duration-ms="104" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.LoginTests@793138bd]" started-at="2025-07-24T14:40:58 IST" name="setup" finished-at="2025-07-24T14:41:02 IST" duration-ms="3246" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:tests.LoginTests@793138bd]" started-at="2025-07-24T14:41:02 IST" name="loginTest" description="TC01-TC24 - Login test for various valid/invalid credentials" data-provider="loginData" finished-at="2025-07-24T14:41:03 IST" duration-ms="1265" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC07]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[doctor@@example]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[DocPass123]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[error]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTests@793138bd]" started-at="2025-07-24T14:41:03 IST" name="tearDown" finished-at="2025-07-24T14:41:03 IST" duration-ms="136" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.LoginTests@793138bd]" started-at="2025-07-24T14:41:03 IST" name="setup" finished-at="2025-07-24T14:41:06 IST" duration-ms="3219" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:tests.LoginTests@793138bd]" started-at="2025-07-24T14:41:06 IST" name="loginTest" description="TC01-TC24 - Login test for various valid/invalid credentials" data-provider="loginData" finished-at="2025-07-24T14:41:07 IST" duration-ms="1270" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[special@!#$.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[special123]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[error]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTests@793138bd]" started-at="2025-07-24T14:41:07 IST" name="tearDown" finished-at="2025-07-24T14:41:08 IST" duration-ms="121" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.LoginTests@793138bd]" started-at="2025-07-24T14:41:08 IST" name="setup" finished-at="2025-07-24T14:41:11 IST" duration-ms="3467" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:tests.LoginTests@793138bd]" started-at="2025-07-24T14:41:11 IST" name="loginTest" description="TC01-TC24 - Login test for various valid/invalid credentials" data-provider="loginData" finished-at="2025-07-24T14:41:12 IST" duration-ms="1287" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[verylongemail@exampletoolonglonglongdomain.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[DocPass123]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[error]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTests@793138bd]" started-at="2025-07-24T14:41:12 IST" name="tearDown" finished-at="2025-07-24T14:41:12 IST" duration-ms="121" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.LoginTests@793138bd]" started-at="2025-07-24T14:41:12 IST" name="setup" finished-at="2025-07-24T14:41:16 IST" duration-ms="3284" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:tests.LoginTests@793138bd]" started-at="2025-07-24T14:41:16 IST" name="loginTest" description="TC01-TC24 - Login test for various valid/invalid credentials" data-provider="loginData" finished-at="2025-07-24T14:41:17 IST" duration-ms="1289" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[doctor@example.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[passwordWithVeryLongText1234567890!@#]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[error]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTests@793138bd]" started-at="2025-07-24T14:41:17 IST" name="tearDown" finished-at="2025-07-24T14:41:17 IST" duration-ms="119" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.LoginTests@793138bd]" started-at="2025-07-24T14:41:17 IST" name="setup" finished-at="2025-07-24T14:41:20 IST" duration-ms="3239" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:tests.LoginTests@793138bd]" started-at="2025-07-24T14:41:20 IST" name="loginTest" description="TC01-TC24 - Login test for various valid/invalid credentials" data-provider="loginData" finished-at="2025-07-24T14:41:27 IST" duration-ms="6815" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC15]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[testprovider@gmail.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12345678]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[success_doctor]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTests@793138bd]" started-at="2025-07-24T14:41:27 IST" name="tearDown" finished-at="2025-07-24T14:41:27 IST" duration-ms="136" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.LoginTests@793138bd]" started-at="2025-07-24T14:41:27 IST" name="setup" finished-at="2025-07-24T14:41:31 IST" duration-ms="3201" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:tests.LoginTests@793138bd]" started-at="2025-07-24T14:41:31 IST" name="loginTest" description="TC01-TC24 - Login test for various valid/invalid credentials" data-provider="loginData" finished-at="2025-07-24T14:41:32 IST" duration-ms="1764" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC19]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Testprovider@gmail.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12345678]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[success_doctor]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTests@793138bd]" started-at="2025-07-24T14:41:32 IST" name="tearDown" finished-at="2025-07-24T14:41:32 IST" duration-ms="135" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.LoginTests@793138bd]" started-at="2025-07-24T14:41:32 IST" name="setup" finished-at="2025-07-24T14:41:36 IST" duration-ms="3081" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:tests.LoginTests@793138bd]" started-at="2025-07-24T14:41:36 IST" name="loginTest" description="TC01-TC24 - Login test for various valid/invalid credentials" data-provider="loginData" finished-at="2025-07-24T14:41:37 IST" duration-ms="1299" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC20]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[doctor@example.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[DOCPASS123]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[error]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTests@793138bd]" started-at="2025-07-24T14:41:37 IST" name="tearDown" finished-at="2025-07-24T14:41:37 IST" duration-ms="119" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.LoginTests@793138bd]" started-at="2025-07-24T14:41:37 IST" name="setup" finished-at="2025-07-24T14:41:40 IST" duration-ms="3236" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:tests.LoginTests@793138bd]" started-at="2025-07-24T14:41:40 IST" name="loginTest" description="TC01-TC24 - Login test for various valid/invalid credentials" data-provider="loginData" finished-at="2025-07-24T14:41:47 IST" duration-ms="6808" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC23]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[testprovider@gmail.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12345678]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[success_doctor]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTests@793138bd]" started-at="2025-07-24T14:41:47 IST" name="tearDown" finished-at="2025-07-24T14:41:47 IST" duration-ms="123" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.LoginTests@793138bd]" started-at="2025-07-24T14:41:47 IST" name="setup" finished-at="2025-07-24T14:41:50 IST" duration-ms="3183" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:tests.LoginTests@793138bd]" started-at="2025-07-24T14:41:50 IST" name="loginTest" description="TC01-TC24 - Login test for various valid/invalid credentials" data-provider="loginData" finished-at="2025-07-24T14:41:52 IST" duration-ms="1815" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC24]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[testscribe@gmail.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12345678]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[success_scribe]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTests@793138bd]" started-at="2025-07-24T14:41:52 IST" name="tearDown" finished-at="2025-07-24T14:41:52 IST" duration-ms="90" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.LoginTests@793138bd]" started-at="2025-07-24T14:41:52 IST" name="setup" finished-at="2025-07-24T14:41:55 IST" duration-ms="3208" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="forgotPasswordTest_TC09()[pri:2, instance:tests.LoginTests@793138bd]" started-at="2025-07-24T14:41:55 IST" name="forgotPasswordTest_TC09" description="TC09 - Verify &#039;Forgot Password&#039; triggers email alert" finished-at="2025-07-24T14:41:57 IST" duration-ms="1244" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- forgotPasswordTest_TC09 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTests@793138bd]" started-at="2025-07-24T14:41:57 IST" name="tearDown" finished-at="2025-07-24T14:41:57 IST" duration-ms="100" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.LoginTests@793138bd]" started-at="2025-07-24T14:41:57 IST" name="setup" finished-at="2025-07-24T14:42:00 IST" duration-ms="3084" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="epicLoginRedirectTest()[pri:3, instance:tests.LoginTests@793138bd]" started-at="2025-07-24T14:42:00 IST" name="epicLoginRedirectTest" description="TC25 - Verify Epic Login Redirect" finished-at="2025-07-24T14:42:12 IST" duration-ms="12281" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- epicLoginRedirectTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTests@793138bd]" started-at="2025-07-24T14:42:12 IST" name="tearDown" finished-at="2025-07-24T14:42:12 IST" duration-ms="120" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.LoginTests -->
      <class name="tests.DoctorDashboardTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.DoctorDashboardTest@31e4bb20]" started-at="2025-07-24T14:42:12 IST" name="setup" finished-at="2025-07-24T14:42:16 IST" duration-ms="4126" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyLanguageToggle()[pri:1, instance:tests.DoctorDashboardTest@31e4bb20]" started-at="2025-07-24T14:42:16 IST" name="verifyLanguageToggle" finished-at="2025-07-24T14:42:19 IST" duration-ms="2197" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLanguageToggle -->
        <test-method is-config="true" signature="refreshPageAfterEachTest()[pri:0, instance:tests.DoctorDashboardTest@31e4bb20]" started-at="2025-07-24T14:42:19 IST" name="refreshPageAfterEachTest" finished-at="2025-07-24T14:42:20 IST" duration-ms="968" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- refreshPageAfterEachTest -->
        <test-method signature="verifyDarkLightSystemModeSwitch()[pri:2, instance:tests.DoctorDashboardTest@31e4bb20]" started-at="2025-07-24T14:42:20 IST" name="verifyDarkLightSystemModeSwitch" finished-at="2025-07-24T14:42:22 IST" duration-ms="2176" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDarkLightSystemModeSwitch -->
        <test-method is-config="true" signature="refreshPageAfterEachTest()[pri:0, instance:tests.DoctorDashboardTest@31e4bb20]" started-at="2025-07-24T14:42:22 IST" name="refreshPageAfterEachTest" finished-at="2025-07-24T14:42:23 IST" duration-ms="882" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- refreshPageAfterEachTest -->
        <test-method signature="verifyFilterByTaskId()[pri:3, instance:tests.DoctorDashboardTest@31e4bb20]" started-at="2025-07-24T14:42:23 IST" name="verifyFilterByTaskId" finished-at="2025-07-24T14:42:35 IST" duration-ms="12369" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Filtered task not present expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Filtered task not present expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at tests.DoctorDashboardTest.verifyFilterByTaskId(DoctorDashboardTest.java:97)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFilterByTaskId -->
        <test-method is-config="true" signature="refreshPageAfterEachTest()[pri:0, instance:tests.DoctorDashboardTest@31e4bb20]" started-at="2025-07-24T14:42:35 IST" name="refreshPageAfterEachTest" finished-at="2025-07-24T14:42:36 IST" duration-ms="1373" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- refreshPageAfterEachTest -->
        <test-method signature="verifySortByTaskIdActuallySorts()[pri:4, instance:tests.DoctorDashboardTest@31e4bb20]" started-at="2025-07-24T14:42:36 IST" name="verifySortByTaskIdActuallySorts" finished-at="2025-07-24T14:42:39 IST" duration-ms="2325" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySortByTaskIdActuallySorts -->
        <test-method is-config="true" signature="refreshPageAfterEachTest()[pri:0, instance:tests.DoctorDashboardTest@31e4bb20]" started-at="2025-07-24T14:42:39 IST" name="refreshPageAfterEachTest" finished-at="2025-07-24T14:42:40 IST" duration-ms="1156" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- refreshPageAfterEachTest -->
        <test-method signature="verifySortByPatientInitialsActuallySorts()[pri:5, instance:tests.DoctorDashboardTest@31e4bb20]" started-at="2025-07-24T14:42:40 IST" name="verifySortByPatientInitialsActuallySorts" finished-at="2025-07-24T14:42:43 IST" duration-ms="2795" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySortByPatientInitialsActuallySorts -->
        <test-method is-config="true" signature="refreshPageAfterEachTest()[pri:0, instance:tests.DoctorDashboardTest@31e4bb20]" started-at="2025-07-24T14:42:43 IST" name="refreshPageAfterEachTest" finished-at="2025-07-24T14:42:44 IST" duration-ms="968" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- refreshPageAfterEachTest -->
        <test-method signature="verifySortByStatusActuallySorts()[pri:6, instance:tests.DoctorDashboardTest@31e4bb20]" started-at="2025-07-24T14:42:44 IST" name="verifySortByStatusActuallySorts" finished-at="2025-07-24T14:42:46 IST" duration-ms="2827" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySortByStatusActuallySorts -->
        <test-method is-config="true" signature="refreshPageAfterEachTest()[pri:0, instance:tests.DoctorDashboardTest@31e4bb20]" started-at="2025-07-24T14:42:46 IST" name="refreshPageAfterEachTest" finished-at="2025-07-24T14:42:47 IST" duration-ms="872" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- refreshPageAfterEachTest -->
        <test-method signature="verifySortByPriorityActuallySorts()[pri:7, instance:tests.DoctorDashboardTest@31e4bb20]" started-at="2025-07-24T14:42:47 IST" name="verifySortByPriorityActuallySorts" finished-at="2025-07-24T14:42:50 IST" duration-ms="2808" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySortByPriorityActuallySorts -->
        <test-method is-config="true" signature="refreshPageAfterEachTest()[pri:0, instance:tests.DoctorDashboardTest@31e4bb20]" started-at="2025-07-24T14:42:50 IST" name="refreshPageAfterEachTest" finished-at="2025-07-24T14:42:51 IST" duration-ms="921" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- refreshPageAfterEachTest -->
        <test-method signature="verifySortByUploadDateActuallySorts()[pri:8, instance:tests.DoctorDashboardTest@31e4bb20]" started-at="2025-07-24T14:42:51 IST" name="verifySortByUploadDateActuallySorts" finished-at="2025-07-24T14:42:55 IST" duration-ms="4375" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySortByUploadDateActuallySorts -->
        <test-method is-config="true" signature="refreshPageAfterEachTest()[pri:0, instance:tests.DoctorDashboardTest@31e4bb20]" started-at="2025-07-24T14:42:55 IST" name="refreshPageAfterEachTest" finished-at="2025-07-24T14:42:56 IST" duration-ms="949" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- refreshPageAfterEachTest -->
        <test-method signature="verifySortByUploadTimeActuallySorts()[pri:9, instance:tests.DoctorDashboardTest@31e4bb20]" started-at="2025-07-24T14:42:56 IST" name="verifySortByUploadTimeActuallySorts" finished-at="2025-07-24T14:42:59 IST" duration-ms="2770" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Upload Time column is not sorted.: Lists differ at element [2]: 08:41 PM != 08:59 PM expected [08:41 PM] but found [08:59 PM]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Upload Time column is not sorted.: Lists differ at element [2]: 08:41 PM != 08:59 PM expected [08:41 PM] but found [08:59 PM]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:1656)
at tests.DoctorDashboardTest.verifySortByUploadTimeActuallySorts(DoctorDashboardTest.java:157)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySortByUploadTimeActuallySorts -->
        <test-method is-config="true" signature="refreshPageAfterEachTest()[pri:0, instance:tests.DoctorDashboardTest@31e4bb20]" started-at="2025-07-24T14:42:59 IST" name="refreshPageAfterEachTest" finished-at="2025-07-24T14:43:00 IST" duration-ms="1076" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- refreshPageAfterEachTest -->
        <test-method signature="verifySortByAudioDurationActuallySorts()[pri:10, instance:tests.DoctorDashboardTest@31e4bb20]" started-at="2025-07-24T14:43:00 IST" name="verifySortByAudioDurationActuallySorts" finished-at="2025-07-24T14:43:03 IST" duration-ms="2809" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySortByAudioDurationActuallySorts -->
        <test-method is-config="true" signature="refreshPageAfterEachTest()[pri:0, instance:tests.DoctorDashboardTest@31e4bb20]" started-at="2025-07-24T14:43:03 IST" name="refreshPageAfterEachTest" finished-at="2025-07-24T14:43:04 IST" duration-ms="989" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- refreshPageAfterEachTest -->
        <test-method signature="verifyFilterByStatusInProgress()[pri:11, instance:tests.DoctorDashboardTest@31e4bb20]" started-at="2025-07-24T14:43:04 IST" name="verifyFilterByStatusInProgress" finished-at="2025-07-24T14:43:12 IST" duration-ms="8210" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Neither rows nor 'No data' message appeared after filtering.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Neither rows nor 'No data' message appeared after filtering.
at pages.DoctorDashboardPage.filterStatusInProgress(DoctorDashboardPage.java:127)
at tests.DoctorDashboardTest.verifyFilterByStatusInProgress(DoctorDashboardTest.java:173)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFilterByStatusInProgress -->
        <test-method is-config="true" signature="refreshPageAfterEachTest()[pri:0, instance:tests.DoctorDashboardTest@31e4bb20]" started-at="2025-07-24T14:43:12 IST" name="refreshPageAfterEachTest" finished-at="2025-07-24T14:43:14 IST" duration-ms="1385" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- refreshPageAfterEachTest -->
        <test-method signature="verifyFilterByPriorityMedium()[pri:12, instance:tests.DoctorDashboardTest@31e4bb20]" started-at="2025-07-24T14:43:14 IST" name="verifyFilterByPriorityMedium" finished-at="2025-07-24T14:43:22 IST" duration-ms="8237" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Neither rows nor 'No data' message appeared after filtering by Medium priority.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Neither rows nor 'No data' message appeared after filtering by Medium priority.
at pages.DoctorDashboardPage.filterPriorityMedium(DoctorDashboardPage.java:166)
at tests.DoctorDashboardTest.verifyFilterByPriorityMedium(DoctorDashboardTest.java:181)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFilterByPriorityMedium -->
        <test-method is-config="true" signature="refreshPageAfterEachTest()[pri:0, instance:tests.DoctorDashboardTest@31e4bb20]" started-at="2025-07-24T14:43:22 IST" name="refreshPageAfterEachTest" finished-at="2025-07-24T14:43:23 IST" duration-ms="1393" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- refreshPageAfterEachTest -->
        <test-method signature="verifyViewTaskHidesRow()[pri:13, instance:tests.DoctorDashboardTest@31e4bb20]" started-at="2025-07-24T14:43:23 IST" name="verifyViewTaskHidesRow" finished-at="2025-07-24T14:43:26 IST" duration-ms="2396" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyViewTaskHidesRow -->
        <test-method is-config="true" signature="refreshPageAfterEachTest()[pri:0, instance:tests.DoctorDashboardTest@31e4bb20]" started-at="2025-07-24T14:43:26 IST" name="refreshPageAfterEachTest" finished-at="2025-07-24T14:43:27 IST" duration-ms="931" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- refreshPageAfterEachTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.DoctorDashboardTest@31e4bb20]" started-at="2025-07-24T14:43:27 IST" name="tearDown" finished-at="2025-07-24T14:43:27 IST" duration-ms="477" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.DoctorDashboardTest -->
    </test> <!-- LoginTests -->
  </suite> <!-- EzyScribe Login Suite -->
</testng-results>
