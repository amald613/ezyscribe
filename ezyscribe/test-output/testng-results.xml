<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="43" passed="33" failed="10" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-07-29T17:28:00 IST" name="EzyScribe Login Suite" finished-at="2025-07-29T17:32:09 IST" duration-ms="248633">
    <groups>
    </groups>
    <test started-at="2025-07-29T17:28:00 IST" name="LoginTests" finished-at="2025-07-29T17:32:09 IST" duration-ms="248633">
      <class name="tests.ScribeDashboardTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.ScribeDashboardTest@463b4ac8]" started-at="2025-07-29T17:29:48 IST" name="setup" finished-at="2025-07-29T17:29:52 IST" duration-ms="4057" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyDarkLightSystemModeSwitch()[pri:1, instance:tests.ScribeDashboardTest@463b4ac8]" started-at="2025-07-29T17:29:52 IST" name="verifyDarkLightSystemModeSwitch" finished-at="2025-07-29T17:29:57 IST" duration-ms="4430" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDarkLightSystemModeSwitch -->
        <test-method is-config="true" signature="refreshPageAfterEachTest()[pri:0, instance:tests.ScribeDashboardTest@463b4ac8]" started-at="2025-07-29T17:29:57 IST" name="refreshPageAfterEachTest" finished-at="2025-07-29T17:29:59 IST" duration-ms="2978" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- refreshPageAfterEachTest -->
        <test-method signature="verifyFilterByTaskId()[pri:2, instance:tests.ScribeDashboardTest@463b4ac8]" started-at="2025-07-29T17:29:59 IST" name="verifyFilterByTaskId" finished-at="2025-07-29T17:30:10 IST" duration-ms="10726" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Filtered task not present expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Filtered task not present expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at tests.ScribeDashboardTest.verifyFilterByTaskId(ScribeDashboardTest.java:87)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFilterByTaskId -->
        <test-method is-config="true" signature="refreshPageAfterEachTest()[pri:0, instance:tests.ScribeDashboardTest@463b4ac8]" started-at="2025-07-29T17:30:10 IST" name="refreshPageAfterEachTest" finished-at="2025-07-29T17:30:14 IST" duration-ms="3488" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- refreshPageAfterEachTest -->
        <test-method signature="verifySortByTaskIdActuallySorts()[pri:3, instance:tests.ScribeDashboardTest@463b4ac8]" started-at="2025-07-29T17:30:14 IST" name="verifySortByTaskIdActuallySorts" finished-at="2025-07-29T17:30:14 IST" duration-ms="151" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySortByTaskIdActuallySorts -->
        <test-method is-config="true" signature="refreshPageAfterEachTest()[pri:0, instance:tests.ScribeDashboardTest@463b4ac8]" started-at="2025-07-29T17:30:14 IST" name="refreshPageAfterEachTest" finished-at="2025-07-29T17:30:17 IST" duration-ms="2982" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- refreshPageAfterEachTest -->
        <test-method signature="verifySortByPatientInitialsActuallySorts()[pri:4, instance:tests.ScribeDashboardTest@463b4ac8]" started-at="2025-07-29T17:30:17 IST" name="verifySortByPatientInitialsActuallySorts" finished-at="2025-07-29T17:30:17 IST" duration-ms="128" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySortByPatientInitialsActuallySorts -->
        <test-method is-config="true" signature="refreshPageAfterEachTest()[pri:0, instance:tests.ScribeDashboardTest@463b4ac8]" started-at="2025-07-29T17:30:17 IST" name="refreshPageAfterEachTest" finished-at="2025-07-29T17:30:19 IST" duration-ms="2532" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- refreshPageAfterEachTest -->
        <test-method signature="verifySortByStatusActuallySorts()[pri:5, instance:tests.ScribeDashboardTest@463b4ac8]" started-at="2025-07-29T17:30:19 IST" name="verifySortByStatusActuallySorts" finished-at="2025-07-29T17:30:20 IST" duration-ms="144" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySortByStatusActuallySorts -->
        <test-method is-config="true" signature="refreshPageAfterEachTest()[pri:0, instance:tests.ScribeDashboardTest@463b4ac8]" started-at="2025-07-29T17:30:20 IST" name="refreshPageAfterEachTest" finished-at="2025-07-29T17:30:22 IST" duration-ms="2533" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- refreshPageAfterEachTest -->
        <test-method signature="verifySortByPriorityActuallySorts()[pri:6, instance:tests.ScribeDashboardTest@463b4ac8]" started-at="2025-07-29T17:30:22 IST" name="verifySortByPriorityActuallySorts" finished-at="2025-07-29T17:30:22 IST" duration-ms="165" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySortByPriorityActuallySorts -->
        <test-method is-config="true" signature="refreshPageAfterEachTest()[pri:0, instance:tests.ScribeDashboardTest@463b4ac8]" started-at="2025-07-29T17:30:22 IST" name="refreshPageAfterEachTest" finished-at="2025-07-29T17:30:25 IST" duration-ms="2568" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- refreshPageAfterEachTest -->
        <test-method signature="verifySortByUploadDateActuallySorts()[pri:7, instance:tests.ScribeDashboardTest@463b4ac8]" started-at="2025-07-29T17:30:25 IST" name="verifySortByUploadDateActuallySorts" finished-at="2025-07-29T17:30:25 IST" duration-ms="143" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySortByUploadDateActuallySorts -->
        <test-method is-config="true" signature="refreshPageAfterEachTest()[pri:0, instance:tests.ScribeDashboardTest@463b4ac8]" started-at="2025-07-29T17:30:25 IST" name="refreshPageAfterEachTest" finished-at="2025-07-29T17:30:28 IST" duration-ms="3098" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- refreshPageAfterEachTest -->
        <test-method signature="verifySortByUploadTimeActuallySorts()[pri:8, instance:tests.ScribeDashboardTest@463b4ac8]" started-at="2025-07-29T17:30:28 IST" name="verifySortByUploadTimeActuallySorts" finished-at="2025-07-29T17:30:28 IST" duration-ms="157" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Upload Time column is not sorted.: Lists differ at element [0]: 05:01 PM != 05:10 PM expected [05:01 PM] but found [05:10 PM]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Upload Time column is not sorted.: Lists differ at element [0]: 05:01 PM != 05:10 PM expected [05:01 PM] but found [05:10 PM]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:1656)
at tests.ScribeDashboardTest.verifySortByUploadTimeActuallySorts(ScribeDashboardTest.java:147)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySortByUploadTimeActuallySorts -->
        <test-method is-config="true" signature="refreshPageAfterEachTest()[pri:0, instance:tests.ScribeDashboardTest@463b4ac8]" started-at="2025-07-29T17:30:28 IST" name="refreshPageAfterEachTest" finished-at="2025-07-29T17:30:31 IST" duration-ms="2439" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- refreshPageAfterEachTest -->
        <test-method signature="verifySortByAudioDurationActuallySorts()[pri:9, instance:tests.ScribeDashboardTest@463b4ac8]" started-at="2025-07-29T17:30:31 IST" name="verifySortByAudioDurationActuallySorts" finished-at="2025-07-29T17:30:31 IST" duration-ms="153" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySortByAudioDurationActuallySorts -->
        <test-method is-config="true" signature="refreshPageAfterEachTest()[pri:0, instance:tests.ScribeDashboardTest@463b4ac8]" started-at="2025-07-29T17:30:31 IST" name="refreshPageAfterEachTest" finished-at="2025-07-29T17:30:34 IST" duration-ms="2918" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- refreshPageAfterEachTest -->
        <test-method signature="verifyFilterByStatusInProgress()[pri:10, instance:tests.ScribeDashboardTest@463b4ac8]" started-at="2025-07-29T17:30:34 IST" name="verifyFilterByStatusInProgress" finished-at="2025-07-29T17:30:39 IST" duration-ms="5578" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Neither rows nor 'No data' message appeared after filtering.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Neither rows nor 'No data' message appeared after filtering.
at pages.ScribeDashboardPage.filterStatusInProgress(ScribeDashboardPage.java:119)
at tests.ScribeDashboardTest.verifyFilterByStatusInProgress(ScribeDashboardTest.java:163)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFilterByStatusInProgress -->
        <test-method is-config="true" signature="refreshPageAfterEachTest()[pri:0, instance:tests.ScribeDashboardTest@463b4ac8]" started-at="2025-07-29T17:30:39 IST" name="refreshPageAfterEachTest" finished-at="2025-07-29T17:30:42 IST" duration-ms="2464" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- refreshPageAfterEachTest -->
        <test-method signature="verifyFilterByPriorityMedium()[pri:11, instance:tests.ScribeDashboardTest@463b4ac8]" started-at="2025-07-29T17:30:42 IST" name="verifyFilterByPriorityMedium" finished-at="2025-07-29T17:30:48 IST" duration-ms="6111" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Neither rows nor 'No data' message appeared after filtering by Medium priority.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Neither rows nor 'No data' message appeared after filtering by Medium priority.
at pages.ScribeDashboardPage.filterPriorityMedium(ScribeDashboardPage.java:158)
at tests.ScribeDashboardTest.verifyFilterByPriorityMedium(ScribeDashboardTest.java:171)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFilterByPriorityMedium -->
        <test-method is-config="true" signature="refreshPageAfterEachTest()[pri:0, instance:tests.ScribeDashboardTest@463b4ac8]" started-at="2025-07-29T17:30:48 IST" name="refreshPageAfterEachTest" finished-at="2025-07-29T17:30:51 IST" duration-ms="3486" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- refreshPageAfterEachTest -->
        <test-method signature="verifyViewTaskHidesRow()[pri:12, instance:tests.ScribeDashboardTest@463b4ac8]" started-at="2025-07-29T17:30:51 IST" name="verifyViewTaskHidesRow" finished-at="2025-07-29T17:30:52 IST" duration-ms="258" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyViewTaskHidesRow -->
        <test-method is-config="true" signature="refreshPageAfterEachTest()[pri:0, instance:tests.ScribeDashboardTest@463b4ac8]" started-at="2025-07-29T17:30:52 IST" name="refreshPageAfterEachTest" finished-at="2025-07-29T17:30:54 IST" duration-ms="2443" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- refreshPageAfterEachTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.ScribeDashboardTest@463b4ac8]" started-at="2025-07-29T17:30:54 IST" name="tearDown" finished-at="2025-07-29T17:30:54 IST" duration-ms="270" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.ScribeDashboardTest -->
      <class name="tests.LoginTests">
        <test-method is-config="true" signature="setupClass()[pri:0, instance:tests.LoginTests@5c18016b]" started-at="2025-07-29T17:28:00 IST" name="setupClass" finished-at="2025-07-29T17:28:00 IST" duration-ms="319" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupClass -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.LoginTests@5c18016b]" started-at="2025-07-29T17:28:01 IST" name="setup" finished-at="2025-07-29T17:28:05 IST" duration-ms="3847" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:tests.LoginTests@5c18016b]" started-at="2025-07-29T17:28:05 IST" name="loginTest" description="TC01-TC24 - Login test for various valid/invalid credentials" data-provider="loginData" finished-at="2025-07-29T17:28:07 IST" duration-ms="2527" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC01]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[testprovider@gmail.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12345678]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[success_doctor]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTests@5c18016b]" started-at="2025-07-29T17:28:07 IST" name="tearDown" finished-at="2025-07-29T17:28:07 IST" duration-ms="132" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.LoginTests@5c18016b]" started-at="2025-07-29T17:28:07 IST" name="setup" finished-at="2025-07-29T17:28:11 IST" duration-ms="3254" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:tests.LoginTests@5c18016b]" started-at="2025-07-29T17:28:11 IST" name="loginTest" description="TC01-TC24 - Login test for various valid/invalid credentials" data-provider="loginData" finished-at="2025-07-29T17:28:12 IST" duration-ms="1284" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC02]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[wrongemail@example.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[DocPass123]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[error]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTests@5c18016b]" started-at="2025-07-29T17:28:12 IST" name="tearDown" finished-at="2025-07-29T17:28:12 IST" duration-ms="117" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.LoginTests@5c18016b]" started-at="2025-07-29T17:28:12 IST" name="setup" finished-at="2025-07-29T17:28:15 IST" duration-ms="3101" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:tests.LoginTests@5c18016b]" started-at="2025-07-29T17:28:15 IST" name="loginTest" description="TC01-TC24 - Login test for various valid/invalid credentials" data-provider="loginData" finished-at="2025-07-29T17:28:16 IST" duration-ms="1277" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC03]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[doctor@example.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[wrongpass]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[error]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTests@5c18016b]" started-at="2025-07-29T17:28:16 IST" name="tearDown" finished-at="2025-07-29T17:28:17 IST" duration-ms="122" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.LoginTests@5c18016b]" started-at="2025-07-29T17:28:17 IST" name="setup" finished-at="2025-07-29T17:28:20 IST" duration-ms="3070" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:tests.LoginTests@5c18016b]" started-at="2025-07-29T17:28:20 IST" name="loginTest" description="TC01-TC24 - Login test for various valid/invalid credentials" data-provider="loginData" finished-at="2025-07-29T17:28:21 IST" duration-ms="1236" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC04]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[DocPass123]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[error]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTests@5c18016b]" started-at="2025-07-29T17:28:21 IST" name="tearDown" finished-at="2025-07-29T17:28:21 IST" duration-ms="126" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.LoginTests@5c18016b]" started-at="2025-07-29T17:28:21 IST" name="setup" finished-at="2025-07-29T17:28:24 IST" duration-ms="3042" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:tests.LoginTests@5c18016b]" started-at="2025-07-29T17:28:24 IST" name="loginTest" description="TC01-TC24 - Login test for various valid/invalid credentials" data-provider="loginData" finished-at="2025-07-29T17:28:25 IST" duration-ms="1276" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC05]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[doctor@example.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[error]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTests@5c18016b]" started-at="2025-07-29T17:28:25 IST" name="tearDown" finished-at="2025-07-29T17:28:25 IST" duration-ms="106" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.LoginTests@5c18016b]" started-at="2025-07-29T17:28:25 IST" name="setup" finished-at="2025-07-29T17:28:29 IST" duration-ms="3285" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:tests.LoginTests@5c18016b]" started-at="2025-07-29T17:28:29 IST" name="loginTest" description="TC01-TC24 - Login test for various valid/invalid credentials" data-provider="loginData" finished-at="2025-07-29T17:28:30 IST" duration-ms="1221" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC06]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[error]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTests@5c18016b]" started-at="2025-07-29T17:28:30 IST" name="tearDown" finished-at="2025-07-29T17:28:30 IST" duration-ms="119" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.LoginTests@5c18016b]" started-at="2025-07-29T17:28:30 IST" name="setup" finished-at="2025-07-29T17:28:33 IST" duration-ms="3021" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:tests.LoginTests@5c18016b]" started-at="2025-07-29T17:28:33 IST" name="loginTest" description="TC01-TC24 - Login test for various valid/invalid credentials" data-provider="loginData" finished-at="2025-07-29T17:28:34 IST" duration-ms="1278" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC07]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[doctor@@example]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[DocPass123]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[error]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTests@5c18016b]" started-at="2025-07-29T17:28:34 IST" name="tearDown" finished-at="2025-07-29T17:28:34 IST" duration-ms="118" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.LoginTests@5c18016b]" started-at="2025-07-29T17:28:34 IST" name="setup" finished-at="2025-07-29T17:28:38 IST" duration-ms="3267" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:tests.LoginTests@5c18016b]" started-at="2025-07-29T17:28:38 IST" name="loginTest" description="TC01-TC24 - Login test for various valid/invalid credentials" data-provider="loginData" finished-at="2025-07-29T17:28:39 IST" duration-ms="1267" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[special@!#$.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[special123]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[error]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTests@5c18016b]" started-at="2025-07-29T17:28:39 IST" name="tearDown" finished-at="2025-07-29T17:28:39 IST" duration-ms="111" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.LoginTests@5c18016b]" started-at="2025-07-29T17:28:39 IST" name="setup" finished-at="2025-07-29T17:28:42 IST" duration-ms="3062" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:tests.LoginTests@5c18016b]" started-at="2025-07-29T17:28:42 IST" name="loginTest" description="TC01-TC24 - Login test for various valid/invalid credentials" data-provider="loginData" finished-at="2025-07-29T17:28:43 IST" duration-ms="1296" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[verylongemail@exampletoolonglonglongdomain.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[DocPass123]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[error]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTests@5c18016b]" started-at="2025-07-29T17:28:43 IST" name="tearDown" finished-at="2025-07-29T17:28:44 IST" duration-ms="130" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.LoginTests@5c18016b]" started-at="2025-07-29T17:28:44 IST" name="setup" finished-at="2025-07-29T17:28:47 IST" duration-ms="3085" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:tests.LoginTests@5c18016b]" started-at="2025-07-29T17:28:47 IST" name="loginTest" description="TC01-TC24 - Login test for various valid/invalid credentials" data-provider="loginData" finished-at="2025-07-29T17:28:48 IST" duration-ms="1301" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[doctor@example.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[passwordWithVeryLongText1234567890!@#]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[error]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTests@5c18016b]" started-at="2025-07-29T17:28:48 IST" name="tearDown" finished-at="2025-07-29T17:28:48 IST" duration-ms="123" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.LoginTests@5c18016b]" started-at="2025-07-29T17:28:48 IST" name="setup" finished-at="2025-07-29T17:28:51 IST" duration-ms="3078" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:tests.LoginTests@5c18016b]" started-at="2025-07-29T17:28:51 IST" name="loginTest" description="TC01-TC24 - Login test for various valid/invalid credentials" data-provider="loginData" finished-at="2025-07-29T17:28:58 IST" duration-ms="6833" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC15]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[testprovider@gmail.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12345678]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[success_doctor]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTests@5c18016b]" started-at="2025-07-29T17:28:58 IST" name="tearDown" finished-at="2025-07-29T17:28:58 IST" duration-ms="137" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.LoginTests@5c18016b]" started-at="2025-07-29T17:28:58 IST" name="setup" finished-at="2025-07-29T17:29:01 IST" duration-ms="3099" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:tests.LoginTests@5c18016b]" started-at="2025-07-29T17:29:01 IST" name="loginTest" description="TC01-TC24 - Login test for various valid/invalid credentials" data-provider="loginData" finished-at="2025-07-29T17:29:04 IST" duration-ms="2333" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC19]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Testprovider@gmail.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12345678]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[success_doctor]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTests@5c18016b]" started-at="2025-07-29T17:29:04 IST" name="tearDown" finished-at="2025-07-29T17:29:04 IST" duration-ms="137" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.LoginTests@5c18016b]" started-at="2025-07-29T17:29:04 IST" name="setup" finished-at="2025-07-29T17:29:07 IST" duration-ms="3280" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:tests.LoginTests@5c18016b]" started-at="2025-07-29T17:29:07 IST" name="loginTest" description="TC01-TC24 - Login test for various valid/invalid credentials" data-provider="loginData" finished-at="2025-07-29T17:29:08 IST" duration-ms="1265" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC20]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[doctor@example.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[DOCPASS123]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[error]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTests@5c18016b]" started-at="2025-07-29T17:29:08 IST" name="tearDown" finished-at="2025-07-29T17:29:08 IST" duration-ms="113" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.LoginTests@5c18016b]" started-at="2025-07-29T17:29:08 IST" name="setup" finished-at="2025-07-29T17:29:12 IST" duration-ms="3585" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:tests.LoginTests@5c18016b]" started-at="2025-07-29T17:29:12 IST" name="loginTest" description="TC01-TC24 - Login test for various valid/invalid credentials" data-provider="loginData" finished-at="2025-07-29T17:29:19 IST" duration-ms="6788" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC23]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[testprovider@gmail.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12345678]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[success_doctor]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTests@5c18016b]" started-at="2025-07-29T17:29:19 IST" name="tearDown" finished-at="2025-07-29T17:29:19 IST" duration-ms="136" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.LoginTests@5c18016b]" started-at="2025-07-29T17:29:19 IST" name="setup" finished-at="2025-07-29T17:29:22 IST" duration-ms="3074" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:tests.LoginTests@5c18016b]" started-at="2025-07-29T17:29:22 IST" name="loginTest" description="TC01-TC24 - Login test for various valid/invalid credentials" data-provider="loginData" finished-at="2025-07-29T17:29:24 IST" duration-ms="1787" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC24]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[testscribe@gmail.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12345678]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[success_scribe]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTests@5c18016b]" started-at="2025-07-29T17:29:24 IST" name="tearDown" finished-at="2025-07-29T17:29:24 IST" duration-ms="124" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.LoginTests@5c18016b]" started-at="2025-07-29T17:29:24 IST" name="setup" finished-at="2025-07-29T17:29:27 IST" duration-ms="3179" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="forgotPasswordTest_TC09()[pri:2, instance:tests.LoginTests@5c18016b]" started-at="2025-07-29T17:29:27 IST" name="forgotPasswordTest_TC09" description="TC09 - Verify &#039;Forgot Password&#039; triggers email alert" finished-at="2025-07-29T17:29:30 IST" duration-ms="3373" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- forgotPasswordTest_TC09 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTests@5c18016b]" started-at="2025-07-29T17:29:30 IST" name="tearDown" finished-at="2025-07-29T17:29:31 IST" duration-ms="113" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.LoginTests@5c18016b]" started-at="2025-07-29T17:29:31 IST" name="setup" finished-at="2025-07-29T17:29:34 IST" duration-ms="3063" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="epicLoginRedirectTest()[pri:3, instance:tests.LoginTests@5c18016b]" started-at="2025-07-29T17:29:34 IST" name="epicLoginRedirectTest" description="TC25 - Verify Epic Login Redirect" finished-at="2025-07-29T17:29:48 IST" duration-ms="14284" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- epicLoginRedirectTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTests@5c18016b]" started-at="2025-07-29T17:29:48 IST" name="tearDown" finished-at="2025-07-29T17:29:48 IST" duration-ms="147" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.LoginTests -->
      <class name="tests.DoctorDashboardTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.DoctorDashboardTest@765f05af]" started-at="2025-07-29T17:30:54 IST" name="setup" finished-at="2025-07-29T17:30:58 IST" duration-ms="3827" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyLanguageToggle()[pri:1, instance:tests.DoctorDashboardTest@765f05af]" started-at="2025-07-29T17:30:58 IST" name="verifyLanguageToggle" finished-at="2025-07-29T17:31:00 IST" duration-ms="2170" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLanguageToggle -->
        <test-method is-config="true" signature="refreshPageAfterEachTest()[pri:0, instance:tests.DoctorDashboardTest@765f05af]" started-at="2025-07-29T17:31:00 IST" name="refreshPageAfterEachTest" finished-at="2025-07-29T17:31:01 IST" duration-ms="978" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- refreshPageAfterEachTest -->
        <test-method signature="verifyDarkLightSystemModeSwitch()[pri:2, instance:tests.DoctorDashboardTest@765f05af]" started-at="2025-07-29T17:31:01 IST" name="verifyDarkLightSystemModeSwitch" finished-at="2025-07-29T17:31:04 IST" duration-ms="2150" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDarkLightSystemModeSwitch -->
        <test-method is-config="true" signature="refreshPageAfterEachTest()[pri:0, instance:tests.DoctorDashboardTest@765f05af]" started-at="2025-07-29T17:31:04 IST" name="refreshPageAfterEachTest" finished-at="2025-07-29T17:31:05 IST" duration-ms="1390" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- refreshPageAfterEachTest -->
        <test-method signature="verifyFilterByTaskId()[pri:3, instance:tests.DoctorDashboardTest@765f05af]" started-at="2025-07-29T17:31:05 IST" name="verifyFilterByTaskId" finished-at="2025-07-29T17:31:17 IST" duration-ms="11726" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Filtered task not present expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Filtered task not present expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at tests.DoctorDashboardTest.verifyFilterByTaskId(DoctorDashboardTest.java:97)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFilterByTaskId -->
        <test-method is-config="true" signature="refreshPageAfterEachTest()[pri:0, instance:tests.DoctorDashboardTest@765f05af]" started-at="2025-07-29T17:31:17 IST" name="refreshPageAfterEachTest" finished-at="2025-07-29T17:31:18 IST" duration-ms="1364" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- refreshPageAfterEachTest -->
        <test-method signature="verifySortByTaskIdActuallySorts()[pri:4, instance:tests.DoctorDashboardTest@765f05af]" started-at="2025-07-29T17:31:18 IST" name="verifySortByTaskIdActuallySorts" finished-at="2025-07-29T17:31:20 IST" duration-ms="1763" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySortByTaskIdActuallySorts -->
        <test-method is-config="true" signature="refreshPageAfterEachTest()[pri:0, instance:tests.DoctorDashboardTest@765f05af]" started-at="2025-07-29T17:31:20 IST" name="refreshPageAfterEachTest" finished-at="2025-07-29T17:31:21 IST" duration-ms="873" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- refreshPageAfterEachTest -->
        <test-method signature="verifySortByPatientInitialsActuallySorts()[pri:5, instance:tests.DoctorDashboardTest@765f05af]" started-at="2025-07-29T17:31:21 IST" name="verifySortByPatientInitialsActuallySorts" finished-at="2025-07-29T17:31:22 IST" duration-ms="1732" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySortByPatientInitialsActuallySorts -->
        <test-method is-config="true" signature="refreshPageAfterEachTest()[pri:0, instance:tests.DoctorDashboardTest@765f05af]" started-at="2025-07-29T17:31:22 IST" name="refreshPageAfterEachTest" finished-at="2025-07-29T17:31:23 IST" duration-ms="968" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- refreshPageAfterEachTest -->
        <test-method signature="verifySortByStatusActuallySorts()[pri:6, instance:tests.DoctorDashboardTest@765f05af]" started-at="2025-07-29T17:31:23 IST" name="verifySortByStatusActuallySorts" finished-at="2025-07-29T17:31:25 IST" duration-ms="1758" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySortByStatusActuallySorts -->
        <test-method is-config="true" signature="refreshPageAfterEachTest()[pri:0, instance:tests.DoctorDashboardTest@765f05af]" started-at="2025-07-29T17:31:25 IST" name="refreshPageAfterEachTest" finished-at="2025-07-29T17:31:26 IST" duration-ms="922" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- refreshPageAfterEachTest -->
        <test-method signature="verifySortByPriorityActuallySorts()[pri:7, instance:tests.DoctorDashboardTest@765f05af]" started-at="2025-07-29T17:31:26 IST" name="verifySortByPriorityActuallySorts" finished-at="2025-07-29T17:31:28 IST" duration-ms="1776" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Priority column is not sorted.: Lists differ at element [0]:  != High expected [] but found [High]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Priority column is not sorted.: Lists differ at element [0]:  != High expected [] but found [High]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:1656)
at tests.DoctorDashboardTest.verifySortByPriorityActuallySorts(DoctorDashboardTest.java:137)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySortByPriorityActuallySorts -->
        <test-method is-config="true" signature="refreshPageAfterEachTest()[pri:0, instance:tests.DoctorDashboardTest@765f05af]" started-at="2025-07-29T17:31:28 IST" name="refreshPageAfterEachTest" finished-at="2025-07-29T17:31:29 IST" duration-ms="904" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- refreshPageAfterEachTest -->
        <test-method signature="verifySortByUploadDateActuallySorts()[pri:8, instance:tests.DoctorDashboardTest@765f05af]" started-at="2025-07-29T17:31:29 IST" name="verifySortByUploadDateActuallySorts" finished-at="2025-07-29T17:31:31 IST" duration-ms="1762" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySortByUploadDateActuallySorts -->
        <test-method is-config="true" signature="refreshPageAfterEachTest()[pri:0, instance:tests.DoctorDashboardTest@765f05af]" started-at="2025-07-29T17:31:31 IST" name="refreshPageAfterEachTest" finished-at="2025-07-29T17:31:31 IST" duration-ms="912" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- refreshPageAfterEachTest -->
        <test-method signature="verifySortByUploadTimeActuallySorts()[pri:9, instance:tests.DoctorDashboardTest@765f05af]" started-at="2025-07-29T17:31:31 IST" name="verifySortByUploadTimeActuallySorts" finished-at="2025-07-29T17:31:33 IST" duration-ms="1705" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Upload Time column is not sorted.: Lists differ at element [0]: 05:01 PM != 05:10 PM expected [05:01 PM] but found [05:10 PM]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Upload Time column is not sorted.: Lists differ at element [0]: 05:01 PM != 05:10 PM expected [05:01 PM] but found [05:10 PM]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:1656)
at tests.DoctorDashboardTest.verifySortByUploadTimeActuallySorts(DoctorDashboardTest.java:157)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySortByUploadTimeActuallySorts -->
        <test-method is-config="true" signature="refreshPageAfterEachTest()[pri:0, instance:tests.DoctorDashboardTest@765f05af]" started-at="2025-07-29T17:31:33 IST" name="refreshPageAfterEachTest" finished-at="2025-07-29T17:31:34 IST" duration-ms="968" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- refreshPageAfterEachTest -->
        <test-method signature="verifySortByAudioDurationActuallySorts()[pri:10, instance:tests.DoctorDashboardTest@765f05af]" started-at="2025-07-29T17:31:34 IST" name="verifySortByAudioDurationActuallySorts" finished-at="2025-07-29T17:31:36 IST" duration-ms="1719" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySortByAudioDurationActuallySorts -->
        <test-method is-config="true" signature="refreshPageAfterEachTest()[pri:0, instance:tests.DoctorDashboardTest@765f05af]" started-at="2025-07-29T17:31:36 IST" name="refreshPageAfterEachTest" finished-at="2025-07-29T17:31:37 IST" duration-ms="1056" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- refreshPageAfterEachTest -->
        <test-method signature="verifyFilterByStatusInProgress()[pri:11, instance:tests.DoctorDashboardTest@765f05af]" started-at="2025-07-29T17:31:37 IST" name="verifyFilterByStatusInProgress" finished-at="2025-07-29T17:31:45 IST" duration-ms="7679" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Neither rows nor 'No data' message appeared after filtering.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Neither rows nor 'No data' message appeared after filtering.
at pages.DoctorDashboardPage.filterStatusInProgress(DoctorDashboardPage.java:127)
at tests.DoctorDashboardTest.verifyFilterByStatusInProgress(DoctorDashboardTest.java:173)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFilterByStatusInProgress -->
        <test-method is-config="true" signature="refreshPageAfterEachTest()[pri:0, instance:tests.DoctorDashboardTest@765f05af]" started-at="2025-07-29T17:31:45 IST" name="refreshPageAfterEachTest" finished-at="2025-07-29T17:31:46 IST" duration-ms="1409" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- refreshPageAfterEachTest -->
        <test-method signature="verifyFilterByPriorityMedium()[pri:12, instance:tests.DoctorDashboardTest@765f05af]" started-at="2025-07-29T17:31:46 IST" name="verifyFilterByPriorityMedium" finished-at="2025-07-29T17:31:53 IST" duration-ms="7092" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Neither rows nor 'No data' message appeared after filtering by Medium priority.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Neither rows nor 'No data' message appeared after filtering by Medium priority.
at pages.DoctorDashboardPage.filterPriorityMedium(DoctorDashboardPage.java:166)
at tests.DoctorDashboardTest.verifyFilterByPriorityMedium(DoctorDashboardTest.java:181)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFilterByPriorityMedium -->
        <test-method is-config="true" signature="refreshPageAfterEachTest()[pri:0, instance:tests.DoctorDashboardTest@765f05af]" started-at="2025-07-29T17:31:53 IST" name="refreshPageAfterEachTest" finished-at="2025-07-29T17:31:54 IST" duration-ms="872" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- refreshPageAfterEachTest -->
        <test-method signature="verifyViewTaskHidesRow()[pri:13, instance:tests.DoctorDashboardTest@765f05af]" started-at="2025-07-29T17:31:54 IST" name="verifyViewTaskHidesRow" finished-at="2025-07-29T17:31:56 IST" duration-ms="2379" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyViewTaskHidesRow -->
        <test-method is-config="true" signature="refreshPageAfterEachTest()[pri:0, instance:tests.DoctorDashboardTest@765f05af]" started-at="2025-07-29T17:31:56 IST" name="refreshPageAfterEachTest" finished-at="2025-07-29T17:31:57 IST" duration-ms="854" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- refreshPageAfterEachTest -->
        <test-method signature="verifyRecordingWorkflow_ReviewAfterRecordAgain()[pri:14, instance:tests.DoctorDashboardTest@765f05af]" started-at="2025-07-29T17:31:57 IST" name="verifyRecordingWorkflow_ReviewAfterRecordAgain" finished-at="2025-07-29T17:32:07 IST" duration-ms="10103" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.xpath: //p[contains(@class, 'gap-5') and contains(@class, 'items-center')]' (tried for 10 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.xpath: //p[contains(@class, 'gap-5') and contains(@class, 'items-center')]' (tried for 10 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:84)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:228)
at pages.DoctorDashboardPage.startRecording(DoctorDashboardPage.java:258)
at tests.DoctorDashboardTest.verifyRecordingWorkflow_ReviewAfterRecordAgain(DoctorDashboardTest.java:201)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//p[contains(@class, 'gap-5') and contains(@class, 'items-center')]"}
  (Session info: chrome=138.0.7204.168)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.21.0', revision: '79ed462ef4'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.7'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [7c86ac5c0e2c00243ca60127c3a865f3, findElement {using=xpath, value=//p[contains(@class, 'gap-5') and contains(@class, 'items-center')]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 138.0.7204.168, chrome: {chromedriverVersion: 138.0.7204.168 (3e8d82e86e9..., userDataDir: C:\Users\Amaldev\AppData\Lo...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:60479}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:60479/devtoo..., se:cdpVersion: 138.0.7204.168, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 7c86ac5c0e2c00243ca60127c3a865f3
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:518)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:355)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:349)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy31.isDisplayed(Unknown Source)
at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:304)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:290)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:287)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:203)
... 28 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRecordingWorkflow_ReviewAfterRecordAgain -->
        <test-method is-config="true" signature="refreshPageAfterEachTest()[pri:0, instance:tests.DoctorDashboardTest@765f05af]" started-at="2025-07-29T17:32:07 IST" name="refreshPageAfterEachTest" finished-at="2025-07-29T17:32:08 IST" duration-ms="890" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- refreshPageAfterEachTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.DoctorDashboardTest@765f05af]" started-at="2025-07-29T17:32:08 IST" name="tearDown" finished-at="2025-07-29T17:32:09 IST" duration-ms="409" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.DoctorDashboardTest -->
    </test> <!-- LoginTests -->
  </suite> <!-- EzyScribe Login Suite -->
</testng-results>
